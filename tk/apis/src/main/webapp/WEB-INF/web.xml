<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
            http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>apis</display-name>

    <!-- Spring配置文件开始  -->
     <context-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>
             classpath:applicationContext.xml,classpath:spring-cache.xml
         </param-value>
     </context-param>
       <context-param>
        <param-name>logbackConfigLocation</param-name>
        <param-value>classpath:logback.xml</param-value> 
    </context-param>
    <context-param>
	    <param-name>webAppRootKey</param-name>
	    <param-value>apis.root</param-value>
	 </context-param>
    <listener>
        <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
    </listener>
     <listener>
         <listener-class>
             org.springframework.web.context.ContextLoaderListener
         </listener-class>
     </listener>
     <!-- Spring配置文件结束 -->

    <!-- 设置servlet编码开始 -->
    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <filter>
        <filter-name>Filter Fields</filter-name>
        <filter-class>com.tk.framework.rest.framework.servlet.WebContextFilter</filter-class>
     </filter>
    <filter-mapping>
        <filter-name>Filter Fields</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
	 <listener>
	    <listener-class>
	        org.springframework.web.context.request.RequestContextListener
	    </listener-class>
	  </listener> 
	  <!-- 将HTTP request对象绑定到为该请求提供服务的Thread。 这使得具有request和session作用域的bean能够在后面的调用链中被访问到 -->
	  <filter> 
	    <filter-name>requestContextFilter</filter-name> 
	    <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
	  </filter> 
	  <filter-mapping> 
	    <filter-name>requestContextFilter</filter-name> 
	    <url-pattern>/*</url-pattern>
	  </filter-mapping>
	  <servlet-mapping>
	     <servlet-name>default</servlet-name>
	     <url-pattern>*.css</url-pattern>
	     <url-pattern>*.png</url-pattern>
	     <url-pattern>*.js</url-pattern>
	     <url-pattern>*.woff</url-pattern>
	     <url-pattern>*.ico</url-pattern>
	</servlet-mapping>
	  <servlet>
		<servlet-name>restApi</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	
	<servlet-mapping>
		<servlet-name>restApi</servlet-name>  
		<url-pattern>/doc/*</url-pattern>  
	</servlet-mapping> 
    <servlet>
        <servlet-name>rest</servlet-name>
        <servlet-class>com.tk.framework.rest.framework.servlet.LDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:rest.xml</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>rest</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
	
	<!-- druid WebStatFilter用于采集web-jdbc关联监控的数据 -->
	  <filter>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
	    <init-param>
	        <param-name>exclusions</param-name>
	        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
	    </init-param>
	    <init-param>
	        <param-name>principalSessionName</param-name>
	        <param-value>userName</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	  </filter-mapping>
	  <!-- end-->
      <!-- druid配置 •deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。  -->
	  <servlet>
	      <servlet-name>DruidStatView</servlet-name>
	      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	      <init-param>
	        <param-name>allow</param-name>
	        <param-value>127.0.0.1</param-value>
	      </init-param>
	       <init-param>
	        <param-name>resetEnable</param-name>
	        <param-value>false</param-value>
	     </init-param>
	  </servlet>
	  <servlet-mapping>
	      <servlet-name>DruidStatView</servlet-name>
	      <url-pattern>/druid/*</url-pattern>
	  </servlet-mapping>
</web-app>
