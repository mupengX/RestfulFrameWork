<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true" />
	<context:component-scan base-package="com.tk">
	</context:component-scan>
	<mvc:annotation-driven />
	
<!-- restAPI swaggerConfig 配置 -->
	<bean id="swaggerConfig"
		class="com.tk.framework.rest.framework.doctool.swaggerconfig.SwaggerConfig" />
	<!-- Enable scanning of spring @Configuration classes -->
	<context:annotation-config />
	<!-- Enable the default documentation controller -->
	<context:component-scan base-package="com.mangofactory.swagger.controllers" />
	<!-- Pick up the bundled spring config -->
	<context:component-scan base-package="com.mangofactory.swagger.configuration" />
<!-- restAPI swaggerConfig 配置  end-->


	<bean id="dynamicLoadBean" class="com.tk.framework.dynamicdatasource.DynamicLoadBean" />
	<bean id="sessionFactory" class="com.tk.framework.dynamicdatasource.MultiSessionFactory">
		<property name="dynamicLoadBean" ref="dynamicLoadBean"></property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

<!-- 分布式事务实现 start	[分布式数据源]	
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="240" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
		<property name="allowCustomIsolationLevels">
			<value>true</value>
		</property>
	</bean>
 分布式事务实现 end -->	
 
<!-- 事务实现 start [druid] -->
 <bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
<!-- 事务实现 end 与druid -->	
	<!-- 拦截器方式配置事物  方法1-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="valid*" read-only="true" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="do*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="create*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="touch*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="apply*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="refresh*" propagation="REQUIRED"
				isolation="REPEATABLE_READ" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.tk..*ServiceImpl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="txAdvice" />
	</aop:config>


    <!-- 身份验证适配器  -->
	<bean id="publicAuthAdapter" class="com.tk.auth.utils.PublicAdapter"></bean>
	<bean id="agencyAuthAdapter" class="com.tk.auth.utils.AgencyAdapter"></bean>
	<bean id="superAdminAuthAdapter" class="com.tk.auth.utils.SuperadminAdapter"></bean>
	<bean id="springContextHelper" class="com.tk.framework.util.SpringContextHelper"></bean>
    <!-- 身份验证适配器 end -->
    
    <!-- 引入redis相关配置 -->
    <import resource="applicationContext-redis.xml"/>
</beans>
