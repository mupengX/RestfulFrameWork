<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
	</appender>
	
	<!-- 将信息写入文件  -->
	<appender name="file"  class="ch.qos.logback.core.rolling.RollingFileAppender">   
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${apis.root}/logs/apis-%d{yyyy-MM-dd}.log</FileNamePattern> 
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>   
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--> 
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>   
        </encoder> 
        <!--日志文件最大的大小-->
       <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
         <MaxFileSize>5MB</MaxFileSize>
       </triggeringPolicy>
    </appender> 
	<!--
		 日志级别从高到低分别是 ERROR、WARN、INFO、DEBUG 通过定义的级别可以控制到应用程序中相应级别的日志信息的开关。
		 程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。如果设置级别为INFO，
		 则优先级高于等于INFO级别（如：INFO、 WARN、ERROR）的日志信息将可以被输出,小于该级别的如DEBUG将不会被输出。
		 建议开发时用DEBUG级别，正式环境部署时调为INFO级别。 
	 -->
	<root level="INFO">
		<appender-ref ref="stdout" />
		<appender-ref ref="file" />
	</root>
	<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 --> 
	<logger name="org.hibernate" level="WARN"/>
    <logger name="org.springframework" level="WARN"/>
    <logger name="com.opensymphony" level="WARN"/>
    <logger name="org.apache" level="WARN"/>
	<logger name="com.mangofactory" level="WARN"/>
	<logger name="com.atomikos" level="WARN"/>
	<logger name="org.eclipse.jetty" level="WARN"/>
    <logger name="org.jboss.netty" level="INFO"/>
	
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="WARN"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/>
    <logger name="org.hibernate.SQL" level="INFO"/>
    <logger name="org.hibernate.engine.QueryParameters" level="INFO"/>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="INFO"/>
   
    
 
</configuration> 